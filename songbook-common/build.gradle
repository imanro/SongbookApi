buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath('net.ltgt.gradle:gradle-apt-plugin:0.21')
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'jacoco'
    id 'org.springframework.boot'
    id "io.spring.dependency-management"
    id 'net.ltgt.apt' version '0.21'
    id 'net.ltgt.apt-idea' version '0.21'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

// The next two lines fixes unresolved dependencies for other subprojects
// https://stackoverflow.com/questions/47598848/spring-boot-multi-module-project-with-gradle-doesnt-build
bootJar {
    enabled = false
}


jar {
    enabled = true
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa') // what is implementation??
    compile ('com.fasterxml.jackson.core:jackson-annotations:2.9.9')

    testImplementation('org.springframework:spring-test:5.1.6.RELEASE')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.2')
    testImplementation('org.hamcrest:hamcrest-library:1.3')
    testImplementation('org.springframework.boot:spring-boot-test-autoconfigure:2.1.4.RELEASE')
    testCompile('org.mockito:mockito-core:2.28.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.2')

    compile('mysql:mysql-connector-java:8.0.16')

    annotationProcessor (
            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
            "javax.annotation:javax.annotation-api:1.3.2",
    )
}

mainClassName = 'songbook.SongbookApplication'

test {
    useJUnitPlatform()
    testLogging {
    //    events "passed", "skipped", "failed"
         showStandardStreams = true
    }
}


task mysqlClean (type:Exec) {
        commandLine 'mysql', '-hlocalhost', '-usongbook_new', '-psongbook_new', '-e', 'drop database songbook_new_test; create database songbook_new_test;'
}

test.dependsOn(mysqlClean)
